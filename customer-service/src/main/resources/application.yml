# Configuration pour le service Customer
spring:
  application:
    name: customer-service

  # Configuration des profils
  profiles:
    active: dev

  # Configuration de la base de données
  datasource:
    url: jdbc:postgresql://localhost:5432/customer_db
    username: customer_user
    password: customer_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000

  # Configuration JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false

  # Configuration Flyway pour les migrations
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    table: flyway_schema_history_customer

  # Configuration du serveur
server:
  port: 8081
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

# Configuration Eureka Client
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

# Configuration des logs
logging:
  level:
    com.flrxnt.customer: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/customer-service.log

# Configuration Actuator pour le monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Configuration OpenAPI/Swagger
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

---
# Profil de développement
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:h2:mem:customerdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  flyway:
    enabled: false

logging:
  level:
    root: INFO
    com.flrxnt.customer: DEBUG

---
# Profil de test
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false

  flyway:
    enabled: false

logging:
  level:
    root: WARN
    com.flrxnt.customer: INFO

---
# Profil de production
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/customer_db}
    username: ${DATABASE_USERNAME:customer_user}
    password: ${DATABASE_PASSWORD:customer_password}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        generate_statistics: false
        use_sql_comments: false

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://eureka-server:8761/eureka/}

logging:
  level:
    root: WARN
    com.flrxnt.customer: INFO
  file:
    name: /var/log/customer-service.log
