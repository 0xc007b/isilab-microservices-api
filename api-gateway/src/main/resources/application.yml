# Configuration du Gateway
server:
  port: 8080

spring:
  application:
    name: api-gateway

  profiles:
    active: dev

  # Configuration Spring Cloud Gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      # Configuration globale des filtres
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Response-Time, #{T(System).currentTimeMillis()}

      # Configuration globale CORS
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true

# Configuration Eureka Client
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    hostname: localhost

# Configuration du monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# Configuration des logs
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
    com.orderms.gateway: DEBUG
    root: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

---
# Profil Docker
spring:
  config:
    activate:
      on-profile: docker

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/

---
# Profil Production
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: WARN
    com.orderms: INFO

management:
  endpoints:
    web:
      exposure:
        include: health,info